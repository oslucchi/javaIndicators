package javaIndicatorsTest.Trend;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import Tick.Tick;
import Tick.TickLogger;
import utils.DataLoader;

public class Alligator {
	
	List<Tick> tickList = new ArrayList<Tick>();

	public Alligator()
	{
		tickList = DataLoader.populateTestData("docs/averageMarketData.ser");
	}

	@Test
	public void testAlligator()
	{
		double[] resultsJaw = {
				  0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000,
				  0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 
				  0.0000, 0.0000,48.3392,48.3931,48.4114,48.3605,48.2751,48.2139,48.1413,48.0850,
				 47.9931,47.8483,47.7269,47.5971,47.5758,47.5784,47.5724,47.6522,47.7082,47.7652,
				 47.8456,47.9659,48.0709,48.2085,48.3317,48.4808,48.6492,48.7854,48.9104,49.0411,
				 49.0380,49.0612,49.0426,49.0232,48.9776,48.9362,48.8811,48.8295,48.7342,48.6538,
				 48.5774,48.4991,48.4084,48.2632,48.1283,48.0184,47.9409,47.8662,47.8434,47.8839,
				 47.9005,47.9420,47.9803,48.0065,48.0406,48.0459,48.0393,48.0963,48.1104,48.0596,
				 48.0196,48.0004,48.0304,48.0958,48.1676,48.2347,48.2790,48.3644,48.4687,48.5127,
				 48.6494,48.8010,48.9240,49.0737,49.2072,49.3544,49.4825,49.5823,49.6575,49.7377,
				 49.7971,49.8458,49.9269,50.0325,50.1346,50.1943,50.2924,50.3630,50.4197,50.4412,
				 50.4588,50.4735,50.4717,50.4801,50.4831,50.4514,50.4505,50.4781,50.5060,50.5401,
				 50.5647,50.6244,50.7056,50.7851,50.8509,50.9908,51.1200,51.2477,51.3879,51.4996,
				 51.5858,51.6753,51.7464,51.82361 
		};
		
		double[] resultsTeeth = {
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				0, 0, 48.4163, 48.4067, 48.3684, 48.3111, 48.2972, 48.3263, 48.4155, 48.4423,
				48.3558, 48.2176, 48.1254, 48.0184, 47.9424, 47.8108, 47.5982, 47.4322, 47.2582, 47.2659,
				47.3089, 47.3328, 47.4925, 47.6034, 47.7092, 47.8468, 48.0422, 48.2032, 48.4103, 48.5853,
				48.7958, 49.0301, 49.2039, 49.3546, 49.5115, 49.4476, 49.4342, 49.3574, 49.2865, 49.1794,
				49.087,  48.9786, 48.8825, 48.721,  48.5921, 48.4756, 48.3611, 48.231,  48.0171, 47.8287,
				47.6876, 47.6029, 47.5238, 47.5296, 47.6346, 47.6928, 47.7862, 47.8679, 47.9244, 47.9901,
				48.0051, 47.9995, 48.097,  48.1199, 48.0362, 47.9742, 47.9486, 48.0038, 48.1133, 48.2279,
				48.3294, 48.3895, 48.5146, 48.6652, 48.7121, 48.9093, 49.1232, 49.2828, 49.4812, 49.6473,
				49.8314, 49.9799, 50.0799, 50.14,   50.21,   50.2475, 50.2703, 50.349,  50.4679, 50.5794,
				50.6207, 50.7269, 50.7873, 50.8264, 50.8106, 50.793,  50.7751, 50.7345, 50.7152, 50.6908,
				50.6132, 50.5915, 50.6188, 50.6465, 50.6844, 50.7064, 50.7856, 50.8974, 51.0027, 51.0824,
				51.2808, 51.4545, 51.6202, 51.8014
		};
		
		double[] resultsLips = {
				0, 0, 0, 0, 0, 0, 0, 48.226, 48.3508, 48.5206, 
				48.4465, 48.4252, 48.3602, 48.2701, 48.2561, 48.3109, 48.4567, 48.4914, 48.3431, 48.1245, 
				47.9956, 47.8505, 47.7624, 47.5879, 47.2923, 47.0879, 46.8783, 46.9666, 47.0953, 47.1762, 
				47.463, 47.6464, 47.8071, 48.0077, 48.2882, 48.4965, 48.7692, 48.9774, 49.2359, 49.5227, 
				49.7022, 49.8437, 49.997, 49.7976, 49.7061, 49.5289, 49.3811, 49.1909, 49.0407, 48.8766, 
				48.7432, 48.5126, 48.3481, 48.2105, 48.0804, 47.9283, 47.6466, 47.4193, 47.2754, 47.2224, 
				47.1719, 47.2515, 47.4752, 47.6002, 47.7681, 47.9025, 47.986, 48.0788, 48.085, 48.06, 
				48.204, 48.2192, 48.0654, 47.9603, 47.9222, 48.0158, 48.1886, 48.3569, 48.4935, 48.5568, 
				48.7235, 48.9228, 48.9462, 49.215, 49.496, 49.6768, 49.9154, 50.0943, 50.2995, 50.4436, 
				50.5109, 50.5207, 50.5566, 50.5472, 50.5238, 50.599, 50.7392, 50.8634, 50.8727, 50.9922, 
				51.0357, 51.0486, 50.9789, 50.9171, 50.8637, 50.7809, 50.7408, 50.6966, 50.5713, 50.545, 
				50.598, 50.6464, 50.7071, 50.7377, 50.8582, 51.0225, 51.166, 51.2608, 51.5427, 51.7681, 
				51.9705, 52.1904, 52.3203, 52.3803
		};
		
		TickLogger tl = TickLogger.getInstance();
		javaIndicators.Trend.Alligator all = new javaIndicators.Trend.Alligator(TickLogger.CONTINUOUS);
		for(int newItem = 0; newItem < tickList.size(); newItem++)
		{
			tl.addTick(tickList.get(newItem));
			try 
			{
				all.addItem();
			}
			catch(Exception e)
			{
				e.printStackTrace();
			}
//			System.out.format("%7.4f;%7.4f;%7.4f;%7.4f;%7.4f\n", 
//								tickList.get(newItem).open,
//								tickList.get(newItem).close,
//								all.getValue(javaIndicators.Trend.Alligator.JAW), 
//								all.getValue(javaIndicators.Trend.Alligator.TEETH),
//								all.getValue(javaIndicators.Trend.Alligator.LIPS));
			assertEquals(resultsJaw[newItem], all.getValue(javaIndicators.Trend.Alligator.JAW), 0.001);
			assertEquals(resultsLips[newItem], all.getValue(javaIndicators.Trend.Alligator.LIPS), 0.001);
			assertEquals(resultsTeeth[newItem], all.getValue(javaIndicators.Trend.Alligator.TEETH), 0.001);
			all.getSynteticValue();
		}
	}
}
